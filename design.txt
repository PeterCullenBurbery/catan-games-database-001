I think I might make catan_game nullable because maybe you don't know anything about the game.
You might only know the date you played the game.
Like maybe in your journal for 
2020-01-01 you wrote I played Catan today.
You don't know anything else so all you can store is the date.

I will change it from

CREATE TABLE catan_game (
    catan_game_id              RAW(16) DEFAULT sys_guid() PRIMARY KEY,
    catan_game                 VARCHAR2(1000) NOT NULL,
    UNIQUE ( catan_game ),
    -- Additional columns for note and dates
    note                    VARCHAR2(4000),  -- General-purpose note field
    date_created            TIMESTAMP(9) WITH TIME ZONE DEFAULT systimestamp(9) NOT NULL,
    date_updated            TIMESTAMP(9) WITH TIME ZONE,
        date_created_or_updated TIMESTAMP(9) WITH TIME ZONE GENERATED ALWAYS AS ( coalesce(date_updated, date_created) ) VIRTUAL
);

CREATE OR REPLACE TRIGGER trigger_set_date_updated_catan_game BEFORE
    UPDATE ON catan_game
    FOR EACH ROW
BEGIN
    :new.date_updated := systimestamp;
END;
/

to

CREATE TABLE catan_game (
    catan_game_id              RAW(16) DEFAULT sys_guid() PRIMARY KEY,
    catan_game                 VARCHAR2(1000),
    UNIQUE ( catan_game ),
    -- Additional columns for note and dates
    note                    VARCHAR2(4000),  -- General-purpose note field
    date_created            TIMESTAMP(9) WITH TIME ZONE DEFAULT systimestamp(9) NOT NULL,
    date_updated            TIMESTAMP(9) WITH TIME ZONE,
        date_created_or_updated TIMESTAMP(9) WITH TIME ZONE GENERATED ALWAYS AS ( coalesce(date_updated, date_created) ) VIRTUAL
);

CREATE OR REPLACE TRIGGER trigger_set_date_updated_catan_game BEFORE
    UPDATE ON catan_game
    FOR EACH ROW
BEGIN
    :new.date_updated := systimestamp;
END;
/

Then I will add a column date_played.

Should date_played be first? I think it would make sense to store date_played before catan_game, because if you only know the date you would put that first.

So it will be
date_played
catan_game

CREATE TABLE catan_game (
    catan_game_id              RAW(16) DEFAULT sys_guid() PRIMARY KEY,
    date_played TIMESTAMP(9) WITH TIME ZONE DEFAULT systimestamp(9) NOT NULL,
    catan_game                 VARCHAR2(1000),
    UNIQUE ( catan_game ),
    -- Additional columns for note and dates
    note                    VARCHAR2(4000),  -- General-purpose note field
    date_created            TIMESTAMP(9) WITH TIME ZONE DEFAULT systimestamp(9) NOT NULL,
    date_updated            TIMESTAMP(9) WITH TIME ZONE,
        date_created_or_updated TIMESTAMP(9) WITH TIME ZONE GENERATED ALWAYS AS ( coalesce(date_updated, date_created) ) VIRTUAL
);

CREATE OR REPLACE TRIGGER trigger_set_date_updated_catan_game BEFORE
    UPDATE ON catan_game
    FOR EACH ROW
BEGIN
    :new.date_updated := systimestamp;
END;
/

Actually, now it will be

CREATE TABLE catan_game (
    catan_game_id                                   RAW(16) DEFAULT sys_guid() PRIMARY KEY,
    date_played                                     TIMESTAMP(9) WITH TIME ZONE DEFAULT systimestamp(9) NOT NULL,
    record_entered_close_to_the_time_you_entered_it NUMBER(1) NOT NULL,
    CHECK ( record_entered_close_to_the_time_you_entered_it IN ( 0, 1 ) ),
    catan_game                                      VARCHAR2(1000),
    UNIQUE ( catan_game ),
    note                                            VARCHAR2(4000),
    date_created                                    TIMESTAMP(9) WITH TIME ZONE DEFAULT systimestamp(9) NOT NULL,
    date_updated                                    TIMESTAMP(9) WITH TIME ZONE,
        date_created_or_updated                         TIMESTAMP(9) WITH TIME ZONE GENERATED ALWAYS AS ( coalesce(date_updated, date_created
        ) ) VIRTUAL
);

CREATE OR REPLACE TRIGGER trigger_set_date_updated_catan_game BEFORE
    UPDATE ON catan_game
    FOR EACH ROW
BEGIN
    :new.date_updated := systimestamp;
END;
/

Okay now I have decided on Catan game.